const fetch = require('node-fetch');
const fs = require('fs')

function randomSring() {
    let r = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5);
    if (r.includes('w') || r.includes('j')) {
        return
    }
    return r
}
function isvalid(text) {
    let chart = text.charAt(0)
    if (chart == 1) {
        return false
    }
    return true
}


async function check() {
    let str = await randomSring()
    let r = await fetch("https://quickchart.io/chart?bkg=white&c=%7Btype:%27sparkline%27,data:%7Bdatasets:%5B%7BbackgroundColor:%27rgba(255,0,0,0)%27,borderColor:%27red%27,data:%5B1.1350512864460582,1.174664185101678,1.1661698720828904,1.1596907965118224,1.1730702849999592,1.1533747689672873,1.180597839105366,1.2403534600562316,1.2249626166002408,1.1870224044788091,1.1787867631618545,1.1574913200666193,1.1472871803576639,1.161244638828571,1.192068602775523,1.1868697188578405,1.1838438588639768,1.1721068360837497,1.1680286859181883,1.1995252430646817,1.1654647631878619,1.1602989453847514,1.1846643784043918,1.1850524719357867,1.2172923950876515,1.203564574813031,1.191011239496243,1.1850790303983516,1.223461089468683,1.2081853256784012,1.21700991594081,1.213311081782559,1.2162853598296257,1.2063619125407823,1.2143647857987263,1.2150148421547953,1.218300074187511,1.223929104492032,1.236363785217683,1.2544438446020805,1.256531543910229,1.2466967954906678,1.2652102787926882,1.2480031261749789,1.2543638595494597,1.2200270433801965,1.2257765758411148,1.221599313060682,1.2310297839466655,1.2363511419069966,1.232074082557617,1.2352176531852446,1.2441319050844766,1.2642905314484443,1.2728709002162093,1.2750156367969951,1.27440841286065,1.2509984581719422,1.2428590200730574,1.2538150001566284,1.2442708865438123,1.2310429003176615,1.2309071977773087,1.2414026265424558,1.2453068869692914,1.2583930799152299,1.3108019640995794,1.3103136863836333,1.3476754206153412,1.3375901711996838,1.3344868503521983,1.3276042765368563,1.3407702806550084,1.3376675802457156,1.3122509638117825,1.3115164147802283,1.2897083317979336,1.2714564410067422,1.2848510088379927,1.2676869449606176,1.2858822837617714,1.2843415014562325,1.282946856475646,1.2826358268462419,1.2826218249145858,1.2850791279549116,1.2980813371336506,1.3231104052341995,1.3258365380289383,1.3272704155672823,1.3509645288864842,1.3299667702898412,1.3308265035800886,1.3703233722073485,1.3675444013857323,1.4142516108839511,1.3564464494252604,1.3697499955982857,1.3638066489466085,1.3702509644873768,1.3492438116043535,1.3463591757373818,1.3953908618075128,1.3473561892195398,1.3120910233618028,1.3272649242739623,1.3485820796166164,1.3415111879036685,1.3230894947008445,1.2931861493348122,1.2997803125516079,1.3116658540847297,1.2994936743646794,1.3061309541408477,1.3081982445010325,1.3250433065666551,1.3183904847043364,1.2972956001375362,1.2885887796935376,1.2707904035769337,1.243992122482622,1.2216971123348346,1.2005280818851687,1.2131032278543157,1.2222695292610686,1.2138680585473185,1.2043339162725193,1.2131184830607864,1.221180656293249,1.1553855232360932,1.1503901888217776,1.1105138221620585,1.1126751561800534,1.1136161411109804,1.1152105074481125,1.1047569807874644,1.09484986149546,1.1116486990991563,1.1071480896976211,1.1053711717794463,1.1174250366758127,1.1061218924852998,1.089596785855159,1.1033783827403183,1.1071387538306283,1.1050381648973602,1.1264704483684544,1.1263200248746892,1.113703617715935,1.1169659927294628,1.116982654250644,1.1024117247712275,1.1010775686221492,1.1027868315983014,1.110493822487132,1.135695699678,1.117284775353312,1.1088896059358397,1.1070203161937229,1.1112031579758168,1.1212329946220903,1.1271939067065813,1.1210518684521071,1.1217374660795085,1.1343506569726676,1.13232879280147,1.1361791936246826,1.1228024586535266%5D%7D%5D%7D%7D", {
        "headers": {
            "content-type": "application/x-www-form-urlencoded",
        },
   
        "method": "GET",
    });
    let json = await r.text()
    islog = await isvalid(json)
    if (islog) {
        console.log(str)
        fs.appendFileSync('./tesst.txt', `${str} \r\n`,);
    }
}


(async () => {
    setInterval(() => {
        check();
    },100);
})()


